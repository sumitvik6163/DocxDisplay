{"ast":null,"code":"exports.paragraph = paragraph;\nexports.run = run;\nexports.table = table;\nexports.bold = new Matcher(\"bold\");\nexports.italic = new Matcher(\"italic\");\nexports.underline = new Matcher(\"underline\");\nexports.strikethrough = new Matcher(\"strikethrough\");\nexports.allCaps = new Matcher(\"allCaps\");\nexports.smallCaps = new Matcher(\"smallCaps\");\nexports.highlight = highlight;\nexports.commentReference = new Matcher(\"commentReference\");\nexports.lineBreak = new BreakMatcher({\n  breakType: \"line\"\n});\nexports.pageBreak = new BreakMatcher({\n  breakType: \"page\"\n});\nexports.columnBreak = new BreakMatcher({\n  breakType: \"column\"\n});\nexports.equalTo = equalTo;\nexports.startsWith = startsWith;\nfunction paragraph(options) {\n  return new Matcher(\"paragraph\", options);\n}\nfunction run(options) {\n  return new Matcher(\"run\", options);\n}\nfunction table(options) {\n  return new Matcher(\"table\", options);\n}\nfunction highlight(options) {\n  return new HighlightMatcher(options);\n}\nfunction Matcher(elementType, options) {\n  options = options || {};\n  this._elementType = elementType;\n  this._styleId = options.styleId;\n  this._styleName = options.styleName;\n  if (options.list) {\n    this._listIndex = options.list.levelIndex;\n    this._listIsOrdered = options.list.isOrdered;\n  }\n}\nMatcher.prototype.matches = function (element) {\n  return element.type === this._elementType && (this._styleId === undefined || element.styleId === this._styleId) && (this._styleName === undefined || element.styleName && this._styleName.operator(this._styleName.operand, element.styleName)) && (this._listIndex === undefined || isList(element, this._listIndex, this._listIsOrdered)) && (this._breakType === undefined || this._breakType === element.breakType);\n};\nfunction HighlightMatcher(options) {\n  options = options || {};\n  this._color = options.color;\n}\nHighlightMatcher.prototype.matches = function (element) {\n  return element.type === \"highlight\" && (this._color === undefined || element.color === this._color);\n};\nfunction BreakMatcher(options) {\n  options = options || {};\n  this._breakType = options.breakType;\n}\nBreakMatcher.prototype.matches = function (element) {\n  return element.type === \"break\" && (this._breakType === undefined || element.breakType === this._breakType);\n};\nfunction isList(element, levelIndex, isOrdered) {\n  return element.numbering && element.numbering.level == levelIndex && element.numbering.isOrdered == isOrdered;\n}\nfunction equalTo(value) {\n  return {\n    operator: operatorEqualTo,\n    operand: value\n  };\n}\nfunction startsWith(value) {\n  return {\n    operator: operatorStartsWith,\n    operand: value\n  };\n}\nfunction operatorEqualTo(first, second) {\n  return first.toUpperCase() === second.toUpperCase();\n}\nfunction operatorStartsWith(first, second) {\n  return second.toUpperCase().indexOf(first.toUpperCase()) === 0;\n}","map":{"version":3,"names":["exports","paragraph","run","table","bold","Matcher","italic","underline","strikethrough","allCaps","smallCaps","highlight","commentReference","lineBreak","BreakMatcher","breakType","pageBreak","columnBreak","equalTo","startsWith","options","HighlightMatcher","elementType","_elementType","_styleId","styleId","_styleName","styleName","list","_listIndex","levelIndex","_listIsOrdered","isOrdered","prototype","matches","element","type","undefined","operator","operand","isList","_breakType","_color","color","numbering","level","value","operatorEqualTo","operatorStartsWith","first","second","toUpperCase","indexOf"],"sources":["D:/sumit/hfc/wrm/node_modules/mammoth/lib/styles/document-matchers.js"],"sourcesContent":["exports.paragraph = paragraph;\nexports.run = run;\nexports.table = table;\nexports.bold = new Matcher(\"bold\");\nexports.italic = new Matcher(\"italic\");\nexports.underline = new Matcher(\"underline\");\nexports.strikethrough = new Matcher(\"strikethrough\");\nexports.allCaps = new Matcher(\"allCaps\");\nexports.smallCaps = new Matcher(\"smallCaps\");\nexports.highlight = highlight;\nexports.commentReference = new Matcher(\"commentReference\");\nexports.lineBreak = new BreakMatcher({breakType: \"line\"});\nexports.pageBreak = new BreakMatcher({breakType: \"page\"});\nexports.columnBreak = new BreakMatcher({breakType: \"column\"});\nexports.equalTo = equalTo;\nexports.startsWith = startsWith;\n\n\nfunction paragraph(options) {\n    return new Matcher(\"paragraph\", options);\n}\n\nfunction run(options) {\n    return new Matcher(\"run\", options);\n}\n\nfunction table(options) {\n    return new Matcher(\"table\", options);\n}\n\nfunction highlight(options) {\n    return new HighlightMatcher(options);\n}\n\nfunction Matcher(elementType, options) {\n    options = options || {};\n    this._elementType = elementType;\n    this._styleId = options.styleId;\n    this._styleName = options.styleName;\n    if (options.list) {\n        this._listIndex = options.list.levelIndex;\n        this._listIsOrdered = options.list.isOrdered;\n    }\n}\n\nMatcher.prototype.matches = function(element) {\n    return element.type === this._elementType &&\n        (this._styleId === undefined || element.styleId === this._styleId) &&\n        (this._styleName === undefined || (element.styleName && this._styleName.operator(this._styleName.operand, element.styleName))) &&\n        (this._listIndex === undefined || isList(element, this._listIndex, this._listIsOrdered)) &&\n        (this._breakType === undefined || this._breakType === element.breakType);\n};\n\nfunction HighlightMatcher(options) {\n    options = options || {};\n    this._color = options.color;\n}\n\nHighlightMatcher.prototype.matches = function(element) {\n    return element.type === \"highlight\" &&\n        (this._color === undefined || element.color === this._color);\n};\n\nfunction BreakMatcher(options) {\n    options = options || {};\n    this._breakType = options.breakType;\n}\n\nBreakMatcher.prototype.matches = function(element) {\n    return element.type === \"break\" &&\n        (this._breakType === undefined || element.breakType === this._breakType);\n};\n\nfunction isList(element, levelIndex, isOrdered) {\n    return element.numbering &&\n        element.numbering.level == levelIndex &&\n        element.numbering.isOrdered == isOrdered;\n}\n\nfunction equalTo(value) {\n    return {\n        operator: operatorEqualTo,\n        operand: value\n    };\n}\n\nfunction startsWith(value) {\n    return {\n        operator: operatorStartsWith,\n        operand: value\n    };\n}\n\nfunction operatorEqualTo(first, second) {\n    return first.toUpperCase() === second.toUpperCase();\n}\n\nfunction operatorStartsWith(first, second) {\n    return second.toUpperCase().indexOf(first.toUpperCase()) === 0;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}