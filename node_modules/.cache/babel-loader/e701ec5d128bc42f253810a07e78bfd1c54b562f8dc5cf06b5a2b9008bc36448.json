{"ast":null,"code":"var _jsxFileName = \"D:\\\\sumit\\\\hfc\\\\wrm\\\\src\\\\COMPONENT\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { renderAsync } from \"docx-preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\");\n  const docRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/HRM 523 - Assignment 2.docx\").then(res => res.arrayBuffer()).then(data => renderAsync(data, docRef.current)).catch(err => console.error(\"Error loading DOCX:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document Viewer with Editable Sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select an Option:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedOption(e.target.value),\n      value: selectedOption,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 1\",\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 2\",\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 3\",\n        children: \"Option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: docRef,\n      style: {\n        border: \"1px solid gray\",\n        marginTop: \"20px\",\n        padding: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Display, \"BczNSVda1QF22WZ8FuDnIxz5mBE=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useRef","useState","renderAsync","jsxDEV","_jsxDEV","Display","_s","selectedOption","setSelectedOption","docRef","fetch","then","res","arrayBuffer","data","current","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","ref","border","marginTop","_c","$RefreshReg$"],"sources":["D:/sumit/hfc/wrm/src/COMPONENT/Display.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { renderAsync } from \"docx-preview\";\r\n\r\nfunction Display() {\r\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\");\r\n  const docRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/HRM 523 - Assignment 2.docx\")\r\n      .then((res) => res.arrayBuffer())\r\n      .then((data) => renderAsync(data, docRef.current))\r\n      .catch((err) => console.error(\"Error loading DOCX:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Document Viewer with Editable Sections</h2>\r\n\r\n      {/* Dropdown */}\r\n      <label>Select an Option:</label>\r\n      <select onChange={(e) => setSelectedOption(e.target.value)} value={selectedOption}>\r\n        <option value=\"Option 1\">Option 1</option>\r\n        <option value=\"Option 2\">Option 2</option>\r\n        <option value=\"Option 3\">Option 3</option>\r\n      </select>\r\n\r\n      {/* DOCX Viewer */}\r\n      <div ref={docRef} style={{ border: \"1px solid gray\", marginTop: \"20px\", padding: \"10px\" }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,UAAU,CAAC;EAChE,MAAMQ,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,CAChCF,IAAI,CAAEG,IAAI,IAAKZ,WAAW,CAACY,IAAI,EAAEL,MAAM,CAACM,OAAO,CAAC,CAAC,CACjDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG/CtB,OAAA;MAAAkB,QAAA,EAAO;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChCtB,OAAA;MAAQuB,QAAQ,EAAGC,CAAC,IAAKpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEvB,cAAe;MAAAe,QAAA,gBAChFlB,OAAA;QAAQ0B,KAAK,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CtB,OAAA;QAAQ0B,KAAK,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CtB,OAAA;QAAQ0B,KAAK,EAAC,UAAU;QAAAR,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGTtB,OAAA;MAAK2B,GAAG,EAAEtB,MAAO;MAACW,KAAK,EAAE;QAAEY,MAAM,EAAE,gBAAgB;QAAEC,SAAS,EAAE,MAAM;QAAEZ,OAAO,EAAE;MAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEV;AAACpB,EAAA,CA3BQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6BhB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}