{"ast":null,"code":"var _jsxFileName = \"D:\\\\sumit\\\\hfc\\\\wrm\\\\src\\\\COMPONENT\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { renderAsync } from \"docx-preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\");\n  const [docData, setDocData] = useState(null);\n  const docRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/HRM 523 - Assignment 2.docx\").then(res => res.arrayBuffer()).then(data => {\n      setDocData(data); // Store original DOCX data\n      renderDoc(data); // Render initial DOCX\n    }).catch(err => console.error(\"Error loading DOCX:\", err));\n  }, []);\n  const renderDoc = data => {\n    if (docRef.current) {\n      docRef.current.innerHTML = \"\"; // Clear previous render\n      renderAsync(data, docRef.current);\n    }\n  };\n\n  // Function to replace \"Objective\" with selected dropdown value\n  const handleReplaceText = () => {\n    if (!docData) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      let text = new TextDecoder().decode(event.target.result);\n      text = text.replace(/Objective/g, selectedOption); // Replace all occurrences\n      const updatedData = new TextEncoder().encode(text);\n      renderDoc(updatedData); // Re-render updated DOCX\n    };\n    reader.readAsArrayBuffer(new Blob([docData]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document Viewer with Editable Sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select an Option:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedOption(e.target.value),\n      value: selectedOption,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 1\",\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 2\",\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 3\",\n        children: \"Option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReplaceText,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Apply Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: docRef,\n      style: {\n        border: \"1px solid gray\",\n        marginTop: \"20px\",\n        padding: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Display, \"xDSPN0RjN+CNZWoRd/LN2cVKnbU=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useRef","useState","renderAsync","jsxDEV","_jsxDEV","Display","_s","selectedOption","setSelectedOption","docData","setDocData","docRef","fetch","then","res","arrayBuffer","data","renderDoc","catch","err","console","error","current","innerHTML","handleReplaceText","reader","FileReader","onload","event","text","TextDecoder","decode","target","result","replace","updatedData","TextEncoder","encode","readAsArrayBuffer","Blob","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","value","onClick","marginLeft","ref","border","marginTop","_c","$RefreshReg$"],"sources":["D:/sumit/hfc/wrm/src/COMPONENT/Display.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { renderAsync } from \"docx-preview\";\r\n\r\nfunction Display() {\r\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\");\r\n  const [docData, setDocData] = useState(null);\r\n  const docRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/HRM 523 - Assignment 2.docx\")\r\n      .then((res) => res.arrayBuffer())\r\n      .then((data) => {\r\n        setDocData(data); // Store original DOCX data\r\n        renderDoc(data); // Render initial DOCX\r\n      })\r\n      .catch((err) => console.error(\"Error loading DOCX:\", err));\r\n  }, []);\r\n\r\n  const renderDoc = (data) => {\r\n    if (docRef.current) {\r\n      docRef.current.innerHTML = \"\"; // Clear previous render\r\n      renderAsync(data, docRef.current);\r\n    }\r\n  };\r\n\r\n  // Function to replace \"Objective\" with selected dropdown value\r\n  const handleReplaceText = () => {\r\n    if (!docData) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      let text = new TextDecoder().decode(event.target.result);\r\n      text = text.replace(/Objective/g, selectedOption); // Replace all occurrences\r\n      const updatedData = new TextEncoder().encode(text);\r\n      renderDoc(updatedData); // Re-render updated DOCX\r\n    };\r\n\r\n    reader.readAsArrayBuffer(new Blob([docData]));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Document Viewer with Editable Sections</h2>\r\n\r\n      {/* Dropdown for selection */}\r\n      <label>Select an Option:</label>\r\n      <select onChange={(e) => setSelectedOption(e.target.value)} value={selectedOption}>\r\n        <option value=\"Option 1\">Option 1</option>\r\n        <option value=\"Option 2\">Option 2</option>\r\n        <option value=\"Option 3\">Option 3</option>\r\n      </select>\r\n\r\n      {/* Button to apply changes */}\r\n      <button onClick={handleReplaceText} style={{ marginLeft: \"10px\" }}>Apply Changes</button>\r\n\r\n      {/* DOCX Viewer */}\r\n      <div ref={docRef} style={{ border: \"1px solid gray\", marginTop: \"20px\", padding: \"10px\" }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}