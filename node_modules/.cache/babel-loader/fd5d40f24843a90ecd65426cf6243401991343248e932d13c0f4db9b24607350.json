{"ast":null,"code":"import { useEffect, useState } from \"react\";\n// Hook\nexport var useWindowSize = function () {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _a = useState({\n      width: undefined,\n      height: undefined\n    }),\n    windowSize = _a[0],\n    setWindowSize = _a[1];\n  useEffect(function () {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // setTimeout(() => {\n    //   handleResize();\n    // }, 500);\n    // Remove event listener on cleanup\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};","map":{"version":3,"names":["useEffect","useState","useWindowSize","_a","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["D:/sumit/hfc/wrm/node_modules/react-doc-viewer/build/utils/useWindowSize.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n// Hook\nexport var useWindowSize = function () {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    var _a = useState({\n        width: undefined,\n        height: undefined,\n    }), windowSize = _a[0], setWindowSize = _a[1];\n    useEffect(function () {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // setTimeout(() => {\n        //   handleResize();\n        // }, 500);\n        // Remove event listener on cleanup\n        return function () { return window.removeEventListener(\"resize\", handleResize); };\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA,OAAO,IAAIC,aAAa,GAAG,SAAAA,CAAA,EAAY;EACnC;EACA;EACA,IAAIC,EAAE,GAAGF,QAAQ,CAAC;MACdG,KAAK,EAAEC,SAAS;MAChBC,MAAM,EAAED;IACZ,CAAC,CAAC;IAAEE,UAAU,GAAGJ,EAAE,CAAC,CAAC,CAAC;IAAEK,aAAa,GAAGL,EAAE,CAAC,CAAC,CAAC;EAC7CH,SAAS,CAAC,YAAY;IAClB;IACA,SAASS,YAAYA,CAAA,EAAG;MACpB;MACAD,aAAa,CAAC;QACVJ,KAAK,EAAEM,MAAM,CAACC,UAAU;QACxBL,MAAM,EAAEI,MAAM,CAACE;MACnB,CAAC,CAAC;IACN;IACA;IACAF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAC/C;IACAA,YAAY,CAAC,CAAC;IACd;IACA;IACA;IACA;IACA,OAAO,YAAY;MAAE,OAAOC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAAE,CAAC;EACrF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,OAAOF,UAAU;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}