{"ast":null,"code":"var _jsxFileName = \"D:\\\\sumit\\\\hfc\\\\wrm\\\\src\\\\COMPONENT\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\nimport Mammoth from \"mammoth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  _s();\n  const [text, setText] = useState(\"\"); // Holds extracted text from DOCX\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\"); // Selected dropdown value\n\n  // Function to handle dropdown change\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Load DOCX file from public folder and extract text\n  useEffect(() => {\n    fetch(\"/HRM 523 - Assignment 2.docx\").then(res => res.arrayBuffer()).then(data => {\n      Mammoth.extractRawText({\n        arrayBuffer: data\n      }).then(result => {\n        setText(result.value);\n      });\n    }).catch(err => console.error(\"Error loading DOCX:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Document Viewer with Editable Sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select an Option:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSelectChange,\n      value: selectedOption,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 1\",\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 2\",\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Option 3\",\n        children: \"Option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px\",\n        border: \"1px solid gray\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: text.replace(\"[placeholder]\", selectedOption)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocViewer, {\n      documents: [{\n        uri: \"/HRM 523 - Assignment 2.docx\"\n      }],\n      pluginRenderers: DocViewerRenderers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Display, \"/8cK/Dhj7COba7Kkz6nRQilpHeU=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","DocViewer","DocViewerRenderers","Mammoth","jsxDEV","_jsxDEV","Display","_s","text","setText","selectedOption","setSelectedOption","handleSelectChange","event","target","value","fetch","then","res","arrayBuffer","data","extractRawText","result","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","marginTop","border","whiteSpace","replace","documents","uri","pluginRenderers","_c","$RefreshReg$"],"sources":["D:/sumit/hfc/wrm/src/COMPONENT/Display.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\r\nimport Mammoth from \"mammoth\";\r\n\r\nfunction Display() {\r\n  const [text, setText] = useState(\"\"); // Holds extracted text from DOCX\r\n  const [selectedOption, setSelectedOption] = useState(\"Option 1\"); // Selected dropdown value\r\n\r\n  // Function to handle dropdown change\r\n  const handleSelectChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  // Load DOCX file from public folder and extract text\r\n  useEffect(() => {\r\n    fetch(\"/HRM 523 - Assignment 2.docx\")\r\n      .then((res) => res.arrayBuffer())\r\n      .then((data) => {\r\n        Mammoth.extractRawText({ arrayBuffer: data }).then((result) => {\r\n          setText(result.value);\r\n        });\r\n      })\r\n      .catch((err) => console.error(\"Error loading DOCX:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Document Viewer with Editable Sections</h2>\r\n\r\n      {/* Dropdown for Editing */}\r\n      <label>Select an Option:</label>\r\n      <select onChange={handleSelectChange} value={selectedOption}>\r\n        <option value=\"Option 1\">Option 1</option>\r\n        <option value=\"Option 2\">Option 2</option>\r\n        <option value=\"Option 3\">Option 3</option>\r\n      </select>\r\n\r\n      {/* Display extracted text with dropdown values injected */}\r\n      <div\r\n        style={{\r\n          marginTop: \"20px\",\r\n          padding: \"10px\",\r\n          border: \"1px solid gray\",\r\n          whiteSpace: \"pre-wrap\",\r\n        }}\r\n      >\r\n        {text.replace(\"[placeholder]\", selectedOption)}\r\n      </div>\r\n\r\n      {/* PDF Viewer */}\r\n      <DocViewer\r\n        documents={[{ uri: \"/HRM 523 - Assignment 2.docx\" }]}\r\n        pluginRenderers={DocViewerRenderers}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}