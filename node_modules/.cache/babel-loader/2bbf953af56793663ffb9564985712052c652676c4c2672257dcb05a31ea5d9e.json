{"ast":null,"code":"import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasDataViewBug } from './_stringTagBug.js';\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\n// Also, in cases where the native `DataView` is\n// overridden we can't rely on the tag itself.\nfunction alternateIsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\nexport default hasDataViewBug ? alternateIsDataView : isDataView;","map":{"version":3,"names":["tagTester","isFunction","isArrayBuffer","hasDataViewBug","isDataView","alternateIsDataView","obj","getInt8","buffer"],"sources":["D:/sumit/hfc/wrm/node_modules/mammoth/node_modules/underscore/modules/isDataView.js"],"sourcesContent":["import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasDataViewBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\n// Also, in cases where the native `DataView` is\n// overridden we can't rely on the tag itself.\nfunction alternateIsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasDataViewBug ? alternateIsDataView : isDataView);\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,IAAIC,UAAU,GAAGJ,SAAS,CAAC,UAAU,CAAC;;AAEtC;AACA;AACA;AACA;AACA,SAASK,mBAAmBA,CAACC,GAAG,EAAE;EAChC,OAAOA,GAAG,IAAI,IAAI,IAAIL,UAAU,CAACK,GAAG,CAACC,OAAO,CAAC,IAAIL,aAAa,CAACI,GAAG,CAACE,MAAM,CAAC;AAC5E;AAEA,eAAgBL,cAAc,GAAGE,mBAAmB,GAAGD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}